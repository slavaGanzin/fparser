#!/usr/bin/env node
require('../lib/listeners')
require('../lib/global')
const parser = require('../lib/parser')
const PH = require('../lib/placeholders')
const parseRange = compose(map(Number), split('..'))
const increaseVerbosity = (_, total) => ++total

global.finishHandlers = []

const prepareOutput = x => JSON[ARGV.nopretty ? 'stringify' : 'pretty'](x)

global.FINISH = compose(console.log, prepareOutput, flatten)

const runFinishHandlers = () => map(call, global.finishHandlers)
const SILENT = 0

ARGV
  .version(require('../package.json').version)
  .option('-S, --no-skip', 'Do not skip on parse')
  .option('-s, --no-save', 'Do not save results')
  .option('-f, --forward [action]', 'Forward result to --forward [action] or skip forwarding with -f')
  .option('-r, --range <from>..<to>', 'Process only <from>..<to> records', parseRange)
  .option('-v, --verbose', 'Verbosity level', increaseVerbosity, SILENT)
  .option('-P, --nopretty', 'Disable formatting of output')
  .option('-p, --placeholders', 'List placeholders')

  .usage('<parsername> [placeholders...]')
  .action((name, ...placeholders) =>
    parser.parse({name, placeholders: PH.parse(placeholders)})
      .then(FINISH)
      .then(runFinishHandlers)
  )
  .parse(process.argv)
